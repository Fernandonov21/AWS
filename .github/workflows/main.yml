name: Deploy to EC2 (Production)

on:
  pull_request:
    branches:
      - main    # Este flujo se ejecutará cuando se haga un pull request hacia 'main'
  push:
    branches:
      - main    # También se ejecutará cuando haya un push directo a la rama 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Clonar el código
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configurar Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Paso 3: Iniciar sesión en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Paso 4: Construir la imagen Docker
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/php-app:latest .

    # Paso 5: Subir la imagen Docker a Docker Hub
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/php-app:latest

    # Paso 6: Desplegar en las instancias EC2 de Producción
    - name: Deploy to Production EC2 instances
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 400 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_PROD_IP_1 }} << EOF
          # Detener el contenedor anterior
          docker stop php-app || true
          docker rm php-app || true

          # Ejecutar el nuevo contenedor
          docker run -d --name php-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/php-app:latest
        EOF
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_PROD_IP_2 }} << EOF
          # Detener el contenedor anterior
          docker stop php-app || true
          docker rm php-app || true

          # Ejecutar el nuevo contenedor
          docker run -d --name php-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/php-app:latest
        EOF
      env:
        EC2_PROD_IP_1: ${{ secrets.EC2_PROD_IP_1 }}
        EC2_PROD_IP_2: ${{ secrets.EC2_PROD_IP_2 }}

    # Paso 7: Eliminar la clave SSH
    - name: Clean up SSH key
      run: rm key.pem
